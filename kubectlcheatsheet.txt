---> First run to login: 
az login

---> To check access to subscriptions:
az account list --query '[].[name]' -o tsv --refresh

---> To connect to Kubernetes cluster:
az aks get-credentials --name "<cluster name>" --subscription "<subscription name>" --resource-group "<resourcegroup name>"


---> Will give you list of namespace:
kubectl --insecure-skip-tls-verify get namespaces

---> Run to check deployments:
kubectl --insecure-skip-tls-verify -n <Name of namespace> get deployments

---> Run to get pods:
kubectl --insecure-skip-tls-verify -n <Name of namespace> get pods

---> Run below to describe pod:
kubectl --insecure-skip-tls-verify -n <Name of namespace> describe pod <podname>

---> Run blow to pull logs of pod:
kubectl --insecure-skip-tls-verify -n <Name of namespace> logs <podname>

---> Run blow to pull logs of pod continue:
kubectl --insecure-skip-tls-verify -n <Name of namespace> logs <podname> -f

---> Run blow to pull logs of pod for particular time in past:
kubectl --insecure-skip-tls-verify -n <Name of namespace> logs <podname> --since=<time>  #10m "m stands for minute, similarly 'h' for hours"


---> Run blow to pull logs of pod for past pod:
kubectl --insecure-skip-tls-verify -n <Name of namespace> logs <podname> --previous

---> To copy log to local:
kubectl --insecure-skip-tls-verify -n <Name of namespace> logs <podname> > <filename>

---> To get Config Map:
kubectl --insecure-skip-tls-verify -n <Name of namespace> get cm <configmap name> -o yaml

---> To Exec to Pod:
kubectl --insecure-skip-tls-verify -n <Name of namespace> exec -it <pod_name> -- /bin/bash

---> To get Deployments
kubectl --insecure-skip-tls-verify -n <Name of namespace> get deployments

---> Describe Deployment:
kubectl --insecure-skip-tls-verify -n <Name of namespace> describe deployment <Deployment name>

---> Describe Pod:
kubectl --insecure-skip-tls-verify -n <Name of namespace> describe po <pod_name>

---> Get Secret in Yaml:
kubectl --insecure-skip-tls-verify -n <Name of namespace> get secrets <secret_name> -o yaml


---> Get Configmap to json
kubectl --insecure-skip-tls-verify -n <namespace> get configmap <configmap name> -o json > <filename>.json

--> To edit configmap
kubectl --insecure-skip-tls-verify -n <namespace> edit configmap <configmap name>

---> To get cronjobs running on namsespace
kubectl --insecure-skip-tls-verify -n <namespace> get jobs
kubectl --insecure-skip-tls-verify -n <namespace> get cronjobs

---> To get Ingress pods:
kubectl --insecure-skip-tls-verify -n <namespace> get po -A | grep -i ingress

---> To get App config:
kubectl --insecure-skip-tls-verify -n <namespace> get appconfig

---> To delete App config:
kubectl --insecure-skip-tls-verify -n <namespace> appconfig <appconfig name>

---> To check AKS cert expiration:
kubectl config view --raw -o jsonpath="{.users[?(@.name == 'clusterUser_<resource_group>_<aks_name>')].user.client-certificate-data}" | base64 -d | openssl x509 -text | grep -A2 Validity

---> To reduce auto scale to 0
kubectl --insecure-skip-tls-verify -n <namespace> scale deployment hermes-server --replicas 0

---> To Get Pod resources:
$ kubectl top pod --containers=true -n <namespace> | grep -i engagement

---> To copy files from cluster node to Local:
$ kubectl node-shell exec -it <node_name> -- cat image.log > image.log


---> To Enable Node Shell:
curl -kLO https://github.com/kvaps/kubectl-node-shell/raw/master/kubectl-node_shell
sudo chmod +x ./kubectl-node_shell
sudo mv ./kubectl-node_shell /usr/local/bin/kubectl-node_shell

---> To get logs of previous pods:
kubectl logs <pod_name> -n <namespace> --previous

---> To get config map of specific service:
kubectl --insecure-skip-tls-verify -n <namespace> get cm <service_name> -o yaml


---> To get Ingress pods:
kubectl --insecure-skip-tls-verify -n <namespace> get ingress
kubectl --insecure-skip-tls-verify -n <namespace> get pods | grep ingress

---> To get logs of ingress pods:
kubectl --insecure-skip-tls-verify -n <namespace> logs <pod_name> -f
kubectl --insecure-skip-tls-verify -n <namespace> logs d<pod_name> -f --since=30m


---> To get log/events related to namespace:
kubectl logs <pod_name> -n <namespace> --previous > <file_name>.log
kubectl get events -n <namespace> > <file_name>.log

---> Command to check heap size:
kubectl --insecure-skip-tls-verify -n <namespace> get pvc

---> Command to change replica:
kubectl scale --replicas=3 statefulset/nn -n ${namespace}

---> Command to increase heap size:
kubectl patch pvc ${pvc-name} -p "{ \"spec\": { \"resources\": { \"requests\": { \"storage\": \"${pvc-size}Gi\" }}}}" -n <namespace>
exp: kubectl patch pvc content-repository-nn-0 -p "{ \"spec\": { \"resources\": { \"requests\": { \"storage\": \"30Gi\" }}}}" -n <namespace>


----> To get stateful state:
kubectl --insecure-skip-tls-verify get statefulsets -n <namespace>

----> To Cordon Node:
kubectl cordon <node_name>

---> Grep Environemnt variable:
kubectl --insecure-skip-tls-verify exec -it <pod-name> -- printenv | grep -i env  

---> Rolling restart:
kubectl --insecure-skip-tls-verify -n <namespace> rollout restart deployment <deployment_name>

---> Watch command for pods"
watch -n 2 -d kubectl describe pod
